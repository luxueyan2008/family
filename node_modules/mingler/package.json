{
  "name": "mingler",
  "description": "Sprockets inspired JavaScript concatenater",
  "version": "1.0.3",
  "author": {
    "name": "Saebekassebil",
    "email": "saebekassebil@gmail.com"
  },
  "keywords": [
    "mingler",
    "concatenation",
    "sprockets",
    "juicer",
    "minify",
    "merge"
  ],
  "dependencies": {
    "uglify-js": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/saebekassebil/mingler"
  },
  "main": "./lib/mingler.js",
  "bin": {
    "mingler": "./bin/mingler"
  },
  "readme": "Mingler\n=======\n\nMingler is an easy-to-use easy-to-install concatenation tool which's\nsyntax is inspired by Sprockets and Juicer. Mingler doesn't try to\nbe anything else than what it is: A tool for concatenating (merging) and\nminifying files. This makes it ideal to include in your project's build-tools,\nJakefile, etc. The package comes with a handy commandline tool which can be\nused globally.\n\nInstallation\n------------\n\nInstallation of Mingler is easy - It's an NPM package:\n`npm install mingler -g`\n\nRemember to install globally (the -g flag), else the commandline tool wont\nbe available to you.\n\nProgrammatical Usage\n--------------------\n\nMingler was originally made for use in code, such as Jakefiles or custom build\nsystems. It builds on an internal event structure which gives complete control\nover the concatenation of minification process.\n\n```javascript\nvar mingler = require('mingler');\n\n// The 'complete' callback, will be called when concatenation\n// (and minification) is complete.\nmingler.on('complete', function(concatenation) {\n  console.log(\"Concatenation complete:\", concatenation);\n});\n\n// The 'warning' callback will be called when a warning occures.\n// This could for example be a missing file.\nmingler.on('warning', function(warn) {\n  console.warn(warn);\n});\n\n// When an error is thrown, the 'error' callback is called.\n// It's important to handle this callback because the mingling doesn't\n// automatically stop\nmingler.on('error', function(error) {\n  console.error(error);\n});\n\n// The 'concatenate' event is fired before a new file is concatenated.\n// The argument 'feedback' has a property called filename, and a method\n// called 'discard()'. The discard method will prevent the file from being\n// merged into the 'master' file.\nmingler.on('concatenate', function(feedback) {\n  if(feedback.filename == 'something_ugly') {\n    feedback.discard();\n  } else {\n    console.log(\"Wee concatenation of \" + feedback.filename + \" has begun\");\n  }\n});\n\n// index.js is for example a file which includes a lot of other files\n// that is needed for the project.\nmingler.mingle(\"index.js\");\n```\n\nIssues\n------\n\nAll issues with this package is encouraged to be reported as GitHub Issues\nhere in the repository. I'll try to fix the bug or implement the feature\nsuggestion as fast as possible.\n\n",
  "_id": "mingler@1.0.3",
  "_from": "mingler"
}
